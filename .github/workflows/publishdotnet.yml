name: Publish F# Nerddeck

on: [push]

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [win-x64, linux-x64, osx-x64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Publish F#
        run: dotnet publish --configuration Release --self-contained true --runtime ${{ matrix.os }} --property:OutputPath=./publish/${{ matrix.os }}
        working-directory: ${{ github.workspace }}/fsharp/NerdDeckFSharp/src/App

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: NerdDeckFSharp-${{ matrix.os }}
          path: ${{ github.workspace }}/fsharp/NerdDeckFSharp/src/App/publish/${{ matrix.os }}

  release:
    needs: publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [win-x64, linux-x64, osx-x64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: NerdDeckFSharp-${{ matrix.os }}
          path: ./NerdDeckFSharp

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./NerdDeckFSharp/NerdDeckFSharp-${{ matrix.os }}.zip
          asset_name: NerdDeckFSharp-${{ matrix.os }}.zip
          asset_content_type: application/zip
